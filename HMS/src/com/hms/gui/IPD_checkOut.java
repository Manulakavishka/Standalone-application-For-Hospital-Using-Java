/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hms.gui;

import com.hms.common.SystemConfigData;
import com.hms.common.SystemVariableList;
import com.hms.common.timeDate;
import com.hms.db.db;
import java.awt.Color;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import static java.time.temporal.ChronoUnit.DAYS;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author 1zt
 */
public class IPD_checkOut extends javax.swing.JFrame {

    /**
     * Creates new form IPD_checkOut
     */
    public IPD_checkOut() {
        initComponents();
        setLocationRelativeTo(null);
        AutoCompleteDecorator.decorate(jComboBox1);
        timeDate td = new timeDate();
        td.timeAndDate(jLabel14);
        loadPARID();
        genarateIid();
        jLabel8.setText(SystemConfigData.getActiveUser());
        jLabel7.setText(SystemConfigData.getUserType());
        loadPaymentType();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_subt = new javax.swing.JTextField();
        txt_bala = new javax.swing.JTextField();
        txt_pay = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_dcharge = new javax.swing.JTextField();
        txt_nic = new javax.swing.JTextField();
        txt_fname = new javax.swing.JTextField();
        txt_lname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_symtoms = new javax.swing.JTextArea();
        txt_dis = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_net = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_iid = new javax.swing.JTextField();
        txt_advance = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txt_Rcharge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1940, 1040));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1940, 1040));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("UserType");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("UserName");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("CheckOut");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Back To Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("time");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("PARID : ");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Treatment Code", "Treatment", "qty", "unit_price", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("SubTotal RS :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Payment RS : ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Balance RS : ");

        txt_subt.setEditable(false);
        txt_subt.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_subt.setText("0.0");

        txt_bala.setEditable(false);
        txt_bala.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_bala.setText("0");
        txt_bala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_balaActionPerformed(evt);
            }
        });

        txt_pay.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_pay.setEnabled(false);
        txt_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_payActionPerformed(evt);
            }
        });
        txt_pay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_payKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("NIC :");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Doctor Charge : ");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Symtoms : ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Fname : ");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Lname : ");

        txt_dcharge.setEditable(false);
        txt_dcharge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_nic.setEditable(false);
        txt_nic.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_fname.setEditable(false);
        txt_fname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_lname.setEditable(false);
        txt_lname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_symtoms.setEditable(false);
        txt_symtoms.setColumns(20);
        txt_symtoms.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txt_symtoms.setRows(5);
        jScrollPane1.setViewportView(txt_symtoms);

        txt_dis.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_dis.setText("0");
        txt_dis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_disActionPerformed(evt);
            }
        });
        txt_dis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_disKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Discount RS : ");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("NetTotal RS : ");

        txt_net.setEditable(false);
        txt_net.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_net.setText("0.0");
        txt_net.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_netActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Invoice ID :");

        txt_iid.setEditable(false);
        txt_iid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txt_advance.setEditable(false);
        txt_advance.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_advance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_advanceActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Advance :");

        txt_Rcharge.setEditable(false);
        txt_Rcharge.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Room Charge RS :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Payment Type :");

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(170, 170, 170)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(11, 11, 11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_advance)
                            .addComponent(txt_dcharge)
                            .addComponent(txt_Rcharge)
                            .addComponent(txt_nic))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_iid, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_fname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_lname)
                        .addGap(89, 89, 89))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3)
                        .addGap(3, 3, 3)))
                .addGap(107, 107, 107))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(txt_subt)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txt_dis)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(txt_net)
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txt_pay)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(txt_bala)))
                .addGap(110, 110, 110))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(798, 798, 798)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 305, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel14))))
                .addGap(1, 1, 1)
                .addComponent(jButton2)
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_iid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_nic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_dcharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_Rcharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_advance, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txt_subt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txt_dis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txt_net, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txt_pay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txt_bala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1550, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Main main = new Main();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            String parid = jComboBox1.getSelectedItem().toString();

            //patient Details
            if (!parid.equals("Select")) {
                String patientSql = "SELECT * FROM patient WHERE nic = (SELECT NIC FROM ipd_p_a_registration WHERE PARID = '" + parid + "')";
                ResultSet patientRs = db.search(patientSql);
                if (patientRs.next()) {
                    txt_nic.setText(patientRs.getString("nic"));
                    txt_fname.setText(patientRs.getString("fname"));
                    txt_lname.setText(patientRs.getString("lname"));
                }

                String symtomSql = "SELECT symptoms FROM ipd_doctor WHERE PARID = '" + parid + "'";
                ResultSet symtomRs = db.search(symtomSql);
                if (symtomRs.next()) {
                    txt_symtoms.setText(symtomRs.getString("symptoms"));
                }

                String dChargeSql = "SELECT charge FROM doctor_charge WHERE code = (SELECT dcharge FROM ipd_p_a_registration WHERE PARID = '" + parid + "')";
                ResultSet dChargRs = db.search(dChargeSql);
                if (dChargRs.next()) {

                    ResultSet addateRs = db.search("SELECT `date` FROM ipd_p_a_registration WHERE `PARID` ='" + parid + "'");

                    addateRs.next();

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                    Date dis = new Date();

                    Date d1 = addateRs.getDate("date");

                    String a = sdf.format(d1);

                    LocalDate date1 = LocalDate.parse(a);
                    LocalDate date3 = LocalDate.parse(sdf.format(dis));

                    long noofdays = DAYS.between(date1, date3);

                    String charge = dChargRs.getString("charge");

                    if (noofdays == 0) {
                        Double icharge = Double.parseDouble(charge) * 1;
                        txt_dcharge.setText(icharge.toString());

                    } else {
                        Double icharge = Double.parseDouble(charge) * noofdays;
                        txt_dcharge.setText(icharge.toString());

                    }

                }

                String rChargeSql = "SELECT dayprice FROM room WHERE room_no = (SELECT room_type FROM ipd_p_a_registration WHERE PARID = '" + parid + "')";
                ResultSet rChargRs = db.search(rChargeSql);
                if (rChargRs.next()) {

                    ResultSet addateRs = db.search("SELECT `date` FROM ipd_p_a_registration WHERE `PARID` ='" + parid + "'");

                    addateRs.next();

                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

                    Date dis = new Date();

                    Date d1 = addateRs.getDate("date");

                    String a = sdf.format(d1);

                    LocalDate date1 = LocalDate.parse(a);
                    LocalDate date3 = LocalDate.parse(sdf.format(dis));

                    long noofdays = DAYS.between(date1, date3);

                    String charge = rChargRs.getString("dayprice");
                    if (noofdays == 0) {
                        Double icharge = Double.parseDouble(charge) * 1;
                        txt_Rcharge.setText(icharge.toString());
                    } else {
                        Double icharge = Double.parseDouble(charge) * noofdays;
                        txt_Rcharge.setText(icharge.toString());
                    }

                }

                String advanceSql = "SELECT Advance FROM ipd_p_a_registration WHERE PARID = '" + parid + "'";
                ResultSet advanceRs = db.search(advanceSql);
                if (advanceRs.next()) {
                    txt_advance.setText(advanceRs.getString("Advance"));
                }
            }
            //tatble implement

            if (!parid.equals("Select")) {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                String sql = "SELECT * FROM ipd_treatment WHERE PARID = '" + parid + "' && status_id = '2'";
                ResultSet rs = db.search(sql);
                dtm.setRowCount(0);
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("treatment"));

                    String sqlTreatment = "SELECT name FROM drug WHERE drug_id = '" + rs.getString("treatment") + "'";
                    ResultSet rsTreatment = db.search(sqlTreatment);
                    if (rsTreatment.next()) {
                        v.add(rsTreatment.getString("name"));

                        v.add(rs.getString("qty"));

                        String sqlCost = "SELECT cost FROM drug WHERE drug_id = '" + rs.getString("treatment") + "'";
                        ResultSet rsCost = db.search(sqlCost);
                        if (rsCost.next()) {

                            double cost = rsCost.getDouble("cost");
                            double qty = rs.getDouble("qty");
                            double totalcost = cost * qty;

                            v.add(rsCost.getString("cost"));
                            v.add(totalcost);

                        }
                    }
                    dtm.addRow(v);
                }
            }

            //payment
            if (!parid.equals("Select")) {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                double subt = 0;
                double dcharge = Double.parseDouble(txt_dcharge.getText());
                for (int row = 0; row < dtm.getRowCount(); row++) {
                    subt += Double.parseDouble(dtm.getValueAt(row, 4).toString());

                }
                double rcharge = Double.parseDouble(txt_Rcharge.getText());
                double advance = Double.parseDouble(txt_advance.getText());

                double total = subt + dcharge + rcharge - advance;
                txt_subt.setText("" + total);
                txt_dis.grabFocus();
            } else {
                JOptionPane.showMessageDialog(this, "Please Select PARID!", "warning", JOptionPane.WARNING_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txt_balaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_balaActionPerformed
        try {
            String iid = txt_iid.getText();
            String parid = jComboBox1.getSelectedItem().toString();
            String nic = txt_nic.getText();
            String username = jLabel8.getText();
            String total = txt_subt.getText();
            String discount = txt_dis.getText();
            String nettotal = txt_net.getText();
            String payment = txt_pay.getText();
            String rcharge = txt_Rcharge.getText();
            String paymentType = jComboBox2.getSelectedItem().toString();
            String sqlSearch = "SELECT date FROM ipd_p_a_registration WHERE PARID = '" + parid + "'";
            ResultSet rs = db.search(sqlSearch);
            if (rs.next()) {

                ResultSet rs2 = db.search("SELECT * FROM `payment_type` WHERE `name` = '" + paymentType + "'");
                rs2.next();
                String paymentTypeId = rs2.getString("id");

                String invoice_sql = "INSERT INTO ipd_invoice VALUES ('" + iid + "','" + parid + "'"
                        + ",'" + nic + "','" + username + "',CURRENT_TIMESTAMP(),'" + rcharge + "','" + total + "'"
                        + ",'" + discount + "','" + nettotal + "','" + payment + "','" + paymentTypeId + "')";
                db.push(invoice_sql);
            }

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            for (int row = 0; row < dtm.getRowCount(); row++) {
                String treatmentCode = dtm.getValueAt(row, 0).toString();
                String qty = dtm.getValueAt(row, 2).toString();
                String uprice = dtm.getValueAt(row, 3).toString();
                String cost = dtm.getValueAt(row, 4).toString();

                String invoiceDrugSql = "INSERT INTO ipd_invoice_drug (invoice_id,drug_id,qty,unitt_price,total) VALUES ('" + iid + "'"
                        + ",'" + treatmentCode + "','" + qty + "','" + uprice + "','" + cost + "')";
                db.push(invoiceDrugSql);

                String RidSql = "UPDATE ipd_p_a_registration SET status_id = '0' WHERE PARID = '" + parid + "'";
                db.push(RidSql);
            }
            printInvoice(iid);
            createNewInvoice();
            loadPARID();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Already Exit", "warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txt_balaActionPerformed

    private void txt_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_payActionPerformed
        if (txt_pay.getText() != null && !txt_pay.getText().trim().equals("")) {
            double net = Double.parseDouble(txt_net.getText());
            double pay = Double.parseDouble(txt_pay.getText());
            if (pay >= net) {
                txt_bala.setText("" + (pay - net));
                txt_bala.grabFocus();
            } else {
                JOptionPane.showMessageDialog(this, "Payment Not Enough", "warning", JOptionPane.WARNING_MESSAGE);
                txt_pay.setText("");
                txt_pay.grabFocus();
            }
        }
    }//GEN-LAST:event_txt_payActionPerformed

    private void txt_disActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_disActionPerformed
        if (txt_subt.getText() != null && !txt_dis.getText().trim().equals("")) {
            double discount = Double.parseDouble(txt_dis.getText());
            double total = Double.parseDouble(txt_subt.getText());

            if (total > 500) {
                txt_net.setText("" + (total - discount));
            } else {
                JOptionPane.showMessageDialog(this, "This Invoice PARID not eligible for Discount", "warning", JOptionPane.WARNING_MESSAGE);
                txt_dis.setText("0");
                txt_net.setText("" + (total));
            }

            jComboBox2.grabFocus();

        }
    }//GEN-LAST:event_txt_disActionPerformed

    private void txt_netActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_netActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_netActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        String text = jComboBox2.getSelectedItem().toString();

        if (text.equals("Select")) {
            txt_pay.setEnabled(false);
            txt_pay.setText("");
            txt_bala.setForeground(Color.BLACK);
        } else {
            txt_pay.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void txt_payKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_payKeyTyped
        String price = txt_pay.getText();
        String text = price + evt.getKeyChar();

        if (!Pattern.compile("(0|0[.]0[.][0-9]*)|[1-9]|[1-9][0-9]*|[1-9][0-9]*[.]|[1-9][0-9]*[.][0-9]*").matcher(text).matches()) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_payKeyTyped

    private void txt_disKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_disKeyTyped
        String price = txt_dis.getText();
        String text = price + evt.getKeyChar();

        if (!Pattern.compile("(0|0[.]0[.][0-9]*)|[1-9]|[1-9][0-9]*|[1-9][0-9]*[.]|[1-9][0-9]*[.][0-9]*").matcher(text).matches()) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_disKeyTyped

    private void txt_advanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_advanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_advanceActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IPD_checkOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IPD_checkOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IPD_checkOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IPD_checkOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IPD_checkOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_Rcharge;
    private javax.swing.JTextField txt_advance;
    private javax.swing.JTextField txt_bala;
    private javax.swing.JTextField txt_dcharge;
    private javax.swing.JTextField txt_dis;
    private javax.swing.JTextField txt_fname;
    private javax.swing.JTextField txt_iid;
    private javax.swing.JTextField txt_lname;
    private javax.swing.JTextField txt_net;
    private javax.swing.JTextField txt_nic;
    private javax.swing.JTextField txt_pay;
    private javax.swing.JTextField txt_subt;
    private javax.swing.JTextArea txt_symtoms;
    // End of variables declaration//GEN-END:variables

    private void genarateIid() {
        try {
            String sql = "SELECT COUNT(*) AS countIID FROM ipd_invoice";
            ResultSet rs = db.search(sql);
            if (rs.next()) {
                int count = rs.getInt("countIID");
                String IID = "IPDIID" + (++count);
                txt_iid.setText(IID);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadPARID() {
        try {
            String searchSql = "SELECT * FROM ipd_p_a_registration WHERE status_id = '1'";
            ResultSet rs = db.search(searchSql);
            Vector v = new Vector();
            v.add("Select");
            while (rs.next()) {
                v.add(rs.getString("PARID"));
            }
            jComboBox1.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void printInvoice(String iid) {
        try {
            String path = SystemVariableList.REPORT_BASE_URL + "ipd_invoice_main.jasper";
            InputStream inputStream = new FileInputStream(path);
            Map<String, Object> params = new HashMap<>();
            params.put("iid", iid);
            params.put("subReport", SystemVariableList.REPORT_BASE_URL + "ipd_invoice_sub.jasper");

            JasperPrint fillReport = JasperFillManager.fillReport(inputStream, params, db.getDBConnection());
            JasperViewer.viewReport(fillReport, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void createNewInvoice() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
    }

    public void loadPaymentType() {
        try {
            String query = "SELECT `name` FROM `payment_type`";
            ResultSet rs = db.search(query);

            Vector v = new Vector();
            v.add("Select");

            while (rs.next()) {
                v.add(rs.getString("name"));
            }

            jComboBox2.setModel(new DefaultComboBoxModel(v));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
